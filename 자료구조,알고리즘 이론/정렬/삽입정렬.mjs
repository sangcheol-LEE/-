/*
    삽입정렬은 구현이 어렵지 않지만 성능이 좀 아쉬운 정렬법
    삽입정렬은 선택정렬과 마찬가지로 배열을 두 영역으로 나눠서 진행합니다.
    하나는 정렬된 영역이고, 다른 하나는 정렬되지 않은 영역입니다.

    삽입정렬은 정렬되지 않은 영역에서 데이터를 하나씩 꺼내서 정렬된 영역 내 적절한 위치에 "삽입"해서 정렬하는 알고리즘입니다.
 */


    const 삽입정렬 = (arr) => {
      for(let i = 1; i < arr.length; i++) {
        let 정렬된_영역의_첫번째_원소 = arr[i]
        let 삽입위치;
        // 정렬된 영역의 마지막 원소는 정렬되지 않은 영역의 첫 번째 원소의 한 칸 앞입니다.
        // 삽입위치는 i - 1로 초기화를 해 정렬된 영역의 맨 뒤로 설정해주겠씁니다.
        for(삽입위치 = i - 1; 삽입위치 >= 0; 삽입위치--) {
          // 정렬된 영역의 마지막 인덱스부터 첫 번째 인덱스까지 역순으로 순회힙니다.

          if(arr[삽입위치] > 정렬된_영역의_첫번째_원소) {
              arr[삽입위치 + 1] = arr[삽입위치];
          } else {
              break;
          }
        }
        arr[삽입위치 + 1] = 정렬된_영역의_첫번째_원소;
      }
    }

    let arrayX = [4,1,5,3,6,2]

    console.log(" ==== 정렬 전 =====")
    console.log(arrayX)

    삽입정렬(arrayX)

    console.log(" ==== 정렬 후 =====")
    console.log(arrayX)

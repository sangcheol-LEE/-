// 선택정렬도 버블정렬 처럼 이해와 구현이 간단하지만 , 성능이 아쉽습니다.

/*
    1. 선택 정렬은 배열의 정렬되지 않은 영역의 첫 번째 원소를 시작으로 마지막 원소까지 비교 후 가장 작은 값을 첫 번째 원소로 가져옵니다.
    2. 그 다음도 정렬되지 않은 영역의 첫 번째 원소를 시작으로 마지막 원소까지 비교 후 가장 작은 값을 첫 번째 원소로 가져옵니다.
    3. 정렬이 완료된 영역은 더 이상 참조할 필요는 없고, 정렬이 완료되지 않은 영역을 대상으로 계속 같은 작업을 반복합니다.
 */

  const 선택정렬 = (array) => {
    for(let i = 0; i < array.length - 1; i++) {
      let 최소값 = i


      for(let j = i + 1; j < array.length; j++) {
        if(array[j] < array[최소값]) {
          최소값 = j
        }
      }

      let 임시변수 = array[i];
      array[i] = array[최소값];
      array[최소값] = 임시변수
    }
  }

  let arr = [4,2,3,1]

  console.log("===== 정렬 전 ======");
  console.log(arr);
  선택정렬(arr);

  console.log("==== 정렬 후 =====");
  console.log(arr)

  /*
    선택 정렬의 성능
      O(n제곱)

    장점
      이해하기 쉽고 구현고 쉽다.

    단점
      성능이 좋지않음
  */